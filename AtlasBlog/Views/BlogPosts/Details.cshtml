@model AtlasBlog.Models.BlogPost

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BlogPost</h4>
    <hr />


    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Slug)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Abstract)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Abstract)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BlogPostState)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BlogPostState)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Updated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Updated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.BlogName)
        </dd>
    </dl>

</div>


@if (User.Identity.IsAuthenticated)
{
    // ----- Present a simple form for collecting the comment -------------
    <form asp-controller="Comments" asp-action="Create">
        <input type="hidden" name="BlogPostId" value="@Model?.Id" />
        <input type="hidden" asp-for="Slug" />
        <textarea class="form-control" name="CommentBody" rows=5 placeholder="Add Comment"></textarea>
        <button class="btn bg-info mt-2">APPLY</button>
    </form>
}
else
{
    <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login" 
    asp-route-returnUrl="@Url.Action("Details", "Comments", new { area = "" })">Login to add a comment</a>
}


<hr />

<div class="row redText" id="CommentSection">

    @foreach (var comment in Model.Comments)
    {
        <div class="col-12 my-2">
            <div class="card border-light mb-3 w-100">
                <div class="card-header">Created by: @comment.Author?.FirstName</div>
                <div class="card-body text-dark">
                    <h5 class="card-title">@comment.CommentBody</h5>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                </div>
                <div class="card-footer">Posted on: @comment.CreatedDate.ToString("MMM dd, yyy")</div>
            </div>
        </div>
    }

</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
