@using AtlasBlog.Enums
@using Microsoft.AspNetCore.Identity

@inject UserManager<BlogUser> _userManager


@model AtlasBlog.Models.BlogPost


@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BlogPost</h4>
    <hr />

    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Slug)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Abstract)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Abstract)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BlogPostState)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BlogPostState)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Updated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Updated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.BlogName)
        </dd>
    </dl>

</div>

@if (User.Identity.IsAuthenticated)
{
    // ----- Present a simple form for collecting the comment -------------
    <form asp-controller="Comments" asp-action="Create">
        <input type="hidden" name="BlogPostId" value="@Model?.Id" />
        <input type="hidden" asp-for="Slug" />
        <textarea class="form-control" name="CommentBody" rows=2 placeholder="Add Comment"></textarea>
        <button class="btn bg-info mt-2">APPLY</button>
    </form>
}
else
{
    <a class="nav-link" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "BlogPosts", new { slug = Model.Slug })">Login to add a comment</a>
}

<hr />

<div class="container">
    <div class="row redText" id="CommentSection">
        @foreach (var comment in Model.Comments.OrderByDescending(c => c.UpdatedDate))
        {
            <div class="col-12 col-md-4 my-2">
                <div class=" targetParent card border-light mb-3 w-100">
                    <span class="card-header">Created by: @comment.Author?.FullName</span>
                    <div class="targetChild card-body text-dark">
                        <h5 class="card-title">@comment.CommentBody</h5>
                    </div>
                    <div class="card-footer">
                        Posted on: @comment.CreatedDate.ToString("MMM dd, yyy")

                        @*----  THIS IS FOR THE COMMENT ROLE ---------------*@
                        @if (comment.ModeratedDate is null && (comment.AuthorId == _userManager.GetUserId(User)))
                        {
                            <div class="row row-cols-1 ">
                                <div class="col">
                                    <button class="btnModal btn btn-light btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#staticBackdrop">EDIT</button>
                                </div>

                                <div class="col">
                                    @* put in a SWEETALERT WINDOW *@
                                    <a id="btnSweetAlert" asp-controller="Comments" class="btn btn-sm btn-danger w-100">DELETE</a>
                                    @*<a id="btnSweetAlert" asp-action="Delete" asp-controller="Comments" asp-route-id="@comment.Id" class="btn btn-sm btn-dark w-100">DELETE</a>*@
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    @if (User.Identity.IsAuthenticated)
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit |</a>
    }
    <a asp-action="Index">Back to List</a>
</div>

@* MODAL CONTENT LOADED HERE *@


<!----------------- Modal ------------------->

<div class="modal fade" id="staticBackdropLabel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Understood</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="moderateCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="moderateCommentModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel2">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                @*1. Display a read-only version of the original body
                2. A text area for collecting the Moderated Body
                3. Select List of Mod Reasons
                *@
                <form asp-action="Moderate" asp-controller="Comments">
                    <input type="hidden" name="Id" id="modalModerateCommentId" />

                    <div>
                        <label class="control-label">Original Body</label>
                        <textarea id="modalModerateCommentBody" rows=10 readonly></textarea>
                    </div>

                    <div>
                        <label class="control-label">Moderated Body</label>
                        <textarea name="ModeratedBody" rows=10></textarea>
                    </div>

                    <div>
                        <label class="control-label">Moderation Reason</label>
                        <select class="form-control" name="ModerationReason" asp-items="@Html.GetEnumSelectList<ModerateReason>()"></select>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-sm btn-warning btn-outline-light w-100 fw-bold">SAVE</button>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>                
            </div>
        </div>
    </div>
</div>


<form name="btnSweetAlert" asp-action="Delete" asp-controller="Comments">
    <input type="hidden" name="Id" id="deleteCommentId" />
</form>


@section Scripts{


<script src="~/lib/jquery/dist/jquery.min.js"></script>




    @* ------------------  HERE IS SOME SWEET ALERT INPUTS ------------------>     *@
<script>
    document.getElementById("btnSweetAlert").addEventListener("click", deleteSweetAlert);
</script>


<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<link rel="stylesheet" href="sweetalert2.min.css">

<script src="sweetalert2.min.js"></script>




@*----------- should I decide to use   QUILL  i'll need this code below _---------------_--_-------_->*@

<script>
    // ----  I WILL NEED A CLICK EVENT HANDLER FOR ALL BUTTONS WITH CLASS ---> btnMODAL <-----
    document.querySelectorAll("button.btnModal").forEach(btn => {
        btn.addEventListener("click", function(){
            // --- THING 1:  GET THE ID OF THE COMMENT INTO THE MODAL -----
            document.getelementById('modalCommentId').value = this.getAttribute("data-commentId")

            // --- THING 2:  GET THE CommentBody INTO THE MODAL --------


            let parent = this.closest("div.targetParent")
            let header = parent.querySelectorAll("div.targetChild h5")
            document.getelelementById('modalModerateCommentBody').innerText = child.innerText;
        });
    });

</script>

}