@using AtlasBlog.Models
@using AtlasBlog.Services.Interfaces
@using Microsoft.AspNetCore.Identity

@model IEnumerable<AtlasBlog.Models.BlogPost>

@inject SignInManager<BlogUser> SignInManager
@inject IImageService _imageService
@inject RoleManager<IdentityRole> roleManager
@inject UserManager<BlogUser> userManager


@{
    ViewData["Title"] = "Index";
}

<h1 class="greenText">Blog Posts</h1>

@if (SignInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table text-light">
    <thead>
        <tr>
            <th>
                Blog Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Abstract)
            </th>

            @if (User.IsInRole("Moderator") || (User.IsInRole("Administrator")))
            {
                <th>
                    @Html.DisplayNameFor(model => model.BlogPostState)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.Body)
            </th>
            @if (User.IsInRole("Moderator") || (User.IsInRole("Administrator")))
            {
                <th class="fw-bold">
                    @Html.DisplayNameFor(model => model.IsDeleted)
                </th>
            }
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Blog.BlogName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abstract)
                </td>

                @if (User.IsInRole("Moderator") || (User.IsInRole("Administrator")))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.BlogPostState)
                    </td>
                }
                <td>
                    @Html.Raw(item.Body)
                </td>

                @if (User.IsInRole("Moderator") || (User.IsInRole("Administrator")))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.IsDeleted)
                    </td>
                }
                <td>
                    <div>
                        <a asp-action="Details" asp-route-slug="@item.Slug">View Details/Add Comments</a>
                    </div>

                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit |</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }

                </td>
            </tr>
        }
    </tbody>

</table>


@*<div class="row">
    <div>
        <div class="col h3 greenText">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>

        <div class="col greenText">
            @Html.PagedListPager(Model, pageNum => Url.Action("Index", new { pageNum }),
            new PagedListRenderOptions
            {
            LiElementClasses = new string[] { "page-link"},
            PageClasses = new string[] { "page-link" }
            })
        </div>
    </div>
</div>*@