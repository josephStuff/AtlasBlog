@using AtlasBlog.Services.Interfaces
@using Microsoft.IdentityModel
@using Microsoft.AspNetCore.Identity
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService _imageService
@inject SignInManager<BlogUser> SignInManager
@inject UserManager<BlogUser> _userManager

@model X.PagedList.IPagedList<Blog>

    
<header class="masthead container-fluid pageBG" style="">
                
@{
    ViewData["Title"] = "Home Index";
}

@if ((User.IsInRole("Moderator")) || (User.IsInRole("Administrator")))
{
    <h5 class="purpleText pt-3">Home Index</h5>
}

@if (User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create" asp-controller="Blogs">Create New</a>
    </p>
}


<div class="py-md-5 d-flex d-block">
    <div class="container">
        <div class="row gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading text-center">
                    <h3 class="subheading">A Code Research Blog</h3>

                    <form asp-action="SearchIndex" asp-controller="BlogPosts">
                        <input name="SearchTerm" class="form-control" />
                        <button type="submit" class="btn-secondary btn-outline w-100 fw-bold redText">SEARCH</button>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>

</header>   

<div class="row  mt-3">
    @foreach (var item in Model!.OrderByDescending(i => i.BlogName))
    {
        <div class="col-12 col-md-3">
            <div class="px-1 g-3 h-100 border glass-jw-style purpleText">
                <a class="noUnderline" asp-controller="Blogs" asp-action="Index" asp-route-slug="">
                    <div class="text-center overflow">
                        <h5 class="card-title text-center overflow " style="">@Html.DisplayFor(modelItem => item.BlogName)</h5>
                        <div class="border-top border-bottom py-2">@Html.DisplayFor(modelItem => item.ResearchTopic)</div>
                    </div>
                    <div class="row p-2">
                        <div class="text-center">
                            <span>
                                @if(item.ImageData == null)
                                {
                                    <img class="img-fluid float-start rounded-circle" style="max-width: 3rem; height: auto;"
                                 src="~/img/DefaultImage.png">Posted: @Html.DisplayFor(modelItem => item.Created);
                                }
                                <img class="img-fluid float-start rounded-circle" style="max-width: 3rem; height: auto;"
                                 src="@_imageService.ConvertByteArrayToFile(item.ImageData!, item.ImageExt!)">Posted: @Html.DisplayFor(modelItem => item.Created)
                            </span>
                        </div>
                    </div>
                </a>
                <div class="d-flex align-items-end justify-content-sm-center">
                    <div class="">
                        @if (User.IsInRole("Administrator"))
                        {
                            <a asp-action="Edit" asp-controller="Blogs" asp-route-id="@item.Id">
                                <i class="bi-pencil-fill" style="font-size: 1.5rem; color:lightyellow;"></i>
                            </a>
                            <a asp-action="Details" asp-controller="Blogs" asp-route-id="@item?.Id">
                                <i class="bi-person-fill" style="font-size: 1.5rem; color:lightyellow;"></i>
                            </a>
                            <a asp-action="Delete" asp-controller="Blogs" asp-route-id="@item?.Id">
                                <i class="bi-trash-fill" style="font-size: 1.5rem; color:red;"></i>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>


<div class="row mt-4">
    <div class="d-flex align-content-end">
        <div class="purpleText" type="text">

            Page @(Model!.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, pageNum => Url.Action("Index", new { pageNum }),
            new PagedListRenderOptions
            {
            LiElementClasses = new string[] { "page-link"},
            PageClasses = new string[] { "page-link" }
            })

        </div>
    </div>
</div>
