@using AtlasBlog.Services.Interfaces
@using Microsoft.IdentityModel
@using Microsoft.AspNetCore.Identity
@using X.PagedList.Mvc.Core
@inject IImageService _imageService
@inject SignInManager<BlogUser> SignInManager

@model X.PagedList.IPagedList<Blog>

@*
    @model IEnumerable<AtlasBlog.Models.Blog>
    *@

@{
    ViewData["Title"] = "Home Page";
}

<h1 class="display-4">Welcome</h1>
<p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>

@foreach (var item in Model)
{

    <div class="mb-3 glass-jw-style" style="width: 18rem">
        <div class="g-2">
            <div class="col-md-4">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.BlogName)</h5>
                    <div class="card-text">
                        CREATED - @Html.DisplayFor(modelItem => item.Created)
                    </div>
                    <div class="card-text">
                        TITLE - @Html.DisplayFor(modelItem => item.Description)
                    </div>
                    @*<a asp-action="Edit" asp-route-id="@item.Id">Edit</a>*@
                    <a asp-action="Edit" asp-route-id="@item.Id">
                        <i class="bi-pencil-fill" style="font-size: 1.5rem; color:white;"></i>
                    </a>
                    <a asp-action="Details" asp-route-id="@item?.Id">
                        <i class="bi-person-fill" style="font-size: 1.5rem; color:white;"></i>
                    </a>
                    <a asp-action="Delete" asp-route-id="@item?.Id">
                        <i class="bi-trash-fill" style="font-size: 1.5rem; color:red;"></i>
                    </a>
                </div>
                <div class="img-fluid">
                    @*<img  class="contactList-image" alt="..." src="@_imageService.ConvertByteArrayToFile(item.ImageData!,item.ImageType!)"></img>*@
                    <img class="img-fluid" style="width:500px;height:50px" src="@_imageService.ConvertByteArrayToFile(item.ImageData, item.ImageExt)" />
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, pageNum => Url.Action("Index", new { pageNum })),
        new PagedListRenderOptions
        {
        LiElementClasses = New string[] { "page-link"}

        }

    </div>
</div>






@*<div class="glass-jw-style">
    <h5 class="card-header">Featured</h5>
    <div class="card-body col-4">
    <h5 class="card-title">Special title treatment</h5>
    <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
    </div>*@